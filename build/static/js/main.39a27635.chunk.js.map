{"version":3,"sources":["components/Header.js","components/Footer.js","components/PokemonUnit.js","components/PokemonList.js","components/Cart.js","components/MainContent.js","App.js","index.js"],"names":["Header","alt","Footer","PokemonUnit","props","pokeProps","name","front_default","sprites","src","PokemonList","useState","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","pokemonData","setPokemonData","apiUrl","setApiUrl","useEffect","axios","get","then","response","data","results","next","previous","capturarCada","a","Promise","all","map","pokemon","pokemonInfo","url","res","_packPokemon","key","onClick","console","log","Cart","MainContent","App","className","ReactDOM","render","document","getElementById"],"mappings":"mMAeeA,MAbf,WACI,OACI,gCACI,yBAAKC,IAAI,KACT,4BACI,0CACA,0CACA,6CCHDC,MAJf,WACI,OAAO,+D,8CCSIC,MAVf,SAAqBC,GAAQ,IAAD,EACiBA,EAAMC,UAAvCC,EADgB,EAChBA,KAAeC,EADC,EACVC,QAASD,cACvB,OACI,oCACI,yBAAKE,IAAKF,EAAeN,IAAI,KAC7B,4BAAKK,KCwDFI,MA3Df,WAAyB,IAAD,EAEYC,mBAAS,IAFrB,mBAEZC,EAFY,KAEHC,EAFG,OAGYF,mBAAS,IAHrB,mBAGZG,EAHY,KAGHC,EAHG,OAIYJ,oBAAS,GAJrB,mBAIZK,EAJY,KAIHC,EAJG,OAKoBN,mBAAS,IAL7B,mBAKZO,EALY,KAKCC,EALD,OAMUR,mBAAS,qCANnB,mBAMZS,EANY,KAMJC,EANI,KASpBC,qBAAW,WAEVC,IAAMC,IAAIJ,GACNK,MAAM,SAAAC,GAAa,IAAD,EAE4BA,EAAlCC,KAAMC,EAFA,EAEAA,QAASC,EAFT,EAESA,KAAMC,EAFf,EAEeA,SAE7BjB,EAAWgB,GACXd,EAAWe,GACXC,EAAaH,QAInB,CAACR,IAEJ,IAAMW,EAAY,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACUC,QAAQC,IAAIP,EAAKQ,IAAL,uCAAU,WAAMC,GAAN,eAAAJ,EAAA,6DACzCK,EAAed,IAAMC,IAAIY,EAAQE,KAAKb,MAAK,SAAAc,GAAG,OAAIA,EAAIZ,QADb,kBAEtCU,GAFsC,2CAAV,wDADtB,OACXG,EADW,OAOjBrB,EAAeqB,GACfvB,GAAW,GARM,2CAAH,sDAuBlB,OACI,oCACMC,EAAYiB,KAAK,SAAAC,GAAO,OAAI,kBAAC,EAAD,CAAaK,IAAKL,EAAQ9B,KAAMD,UAAW+B,OAEvEpB,EAAU,6CAAyB,sCAErC,4BAAQ0B,QAlBhB,WACkB,MAAX5B,IACCO,EAAUP,GACV6B,QAAQC,IAAI9B,MAeZ,QACA,4BAAQ4B,QAZhB,WACIrB,EAAUT,GACV+B,QAAQC,IAAIhC,KAUR,UCpDGiC,MAJf,WACI,OAAO,mECiBIC,MAff,WAEI,OACI,oCACI,8BACI,oDACA,kBAAC,EAAD,OAEJ,+BACI,kBAAC,EAAD,SCCDC,MAVf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OAAS,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.39a27635.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img alt=\"\"/>\r\n            <ul>\r\n                <li>Botão 1</li>\r\n                <li>Botão 2</li>\r\n                <li>Botão 3</li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return <footer> Created by Gabriel Dantas</footer>\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction PokemonUnit(props) {\r\n    const { name, sprites:{front_default}} = props.pokeProps\r\n    return (\r\n        <>\r\n            <img src={front_default} alt='' />\r\n            <h5>{name}</h5>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonUnit","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport PokemonUnit from './PokemonUnit'\r\n\r\nfunction PokemonList () {\r\n\r\n    const [ nextUrl, setNextUrl ] = useState('')\r\n    const [ prevUrl, setPrevUrl ] = useState('')\r\n    const [ loading, setLoading ] = useState(true)\r\n    const [ pokemonData, setPokemonData ] = useState([])\r\n    const [ apiUrl, setApiUrl ] = useState('https://pokeapi.co/api/v2/pokemon')  \r\n\r\n\r\n    useEffect( () => {\r\n        \r\n     axios.get(apiUrl)\r\n        .then( response => {\r\n            \r\n             const { data:{results, next, previous}} = response\r\n            \r\n             setNextUrl(next)\r\n             setPrevUrl(previous)\r\n             capturarCada(results)\r\n        })\r\n                     \r\n            \r\n    }, [apiUrl]) \r\n\r\n    const capturarCada = async (data) => {\r\n        const _packPokemon = await Promise.all(data.map( async pokemon => {\r\n            let pokemonInfo =  axios.get(pokemon.url).then(res => res.data)\r\n            return pokemonInfo\r\n            }))\r\n        \r\n                \r\n        setPokemonData(_packPokemon)\r\n        setLoading(false)\r\n    }\r\n    \r\n    function handlePrev(){\r\n        if(prevUrl != null ){\r\n            setApiUrl(prevUrl)\r\n            console.log(prevUrl)\r\n        }\r\n    }\r\n    \r\n    function handleNext(){\r\n        setApiUrl(nextUrl)\r\n        console.log(nextUrl)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            { pokemonData.map( pokemon => <PokemonUnit key={pokemon.name} pokeProps={pokemon} /> ) }\r\n\r\n            { loading ? <h1>Carregando...</h1> : <h1>Chegou</h1> }        \r\n            \r\n            <button onClick={handlePrev}>Prev</button>\r\n            <button onClick={handleNext}>Next</button>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonList","import React from 'react'\r\n\r\nfunction Cart() {\r\n    return <h2>____________Cart component is here</h2>\r\n}\r\n\r\nexport default Cart","import React from 'react'\r\n\r\nimport PokemonList from './PokemonList'\r\nimport Cart from './Cart'\r\n\r\nfunction MainContent() {    \r\n    \r\n    return (\r\n        <>\r\n            <main>\r\n                <h1>Choose your pokemon:</h1>\r\n                <PokemonList />              \r\n            </main>\r\n            <aside>\r\n                <Cart />\r\n            </aside>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport MainContent from './components/MainContent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContent />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(  <App />,  document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}