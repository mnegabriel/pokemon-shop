{"version":3,"sources":["components/Header.js","components/Footer.js","components/PokemonUnit.js","components/PokemonList.js","components/CartItem.js","components/Cart.js","components/MainContent.js","App.js","index.js"],"names":["Header","alt","Footer","href","PokemonUnit","props","pokeProps","id","name","front_default","sprites","grabPokeInfo","custo","formatedName","toUpperCase","slice","image","className","src","onClick","units","PokemonList","dbPrices","useState","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","pokemonData","setPokemonData","apiUrl","setApiUrl","handlePrev","console","log","handleNext","useEffect","axios","get","then","response","data","results","next","previous","capturarCada","a","Promise","all","map","pokemon","pokemonInfo","url","res","_packPokemon","dataForCart","escalaPokemon","price","key","CartItem","pokeCart","Cart","cartItems","Allpokemon","item","length","MainContent","prices","cart","setCart","itemData","pokemonInCart","filter","cartSemEste","test","updatedPokemon","App","setPrices","temp","i","push","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de7e0fc8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img alt=\"\"/>\r\n            <ul>\r\n                <li>Botão 1</li>\r\n                <li>Botão 2</li>\r\n                <li>Botão 3</li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return <footer> Created by <a href='https://github.com/mnegabriel'>Gabriel Dantas</a></footer>\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction PokemonUnit(props) {\r\n    const { \r\n        pokeProps:{\r\n            id, \r\n            name, \r\n            sprites:{front_default}}, \r\n        grabPokeInfo,\r\n        custo\r\n    } = props\r\n\r\n    const formatedName = name[0].toUpperCase() + name.slice(1);\r\n    const image = front_default\r\n\r\n    \r\n    \r\n    return (\r\n        <div className='card'>\r\n\r\n            <img src={image} alt='' />\r\n            <p>PokeIndex: {id}</p>\r\n            <p>R${custo},00</p>\r\n            <h5>{formatedName}</h5>\r\n\r\n            <button onClick={ () => grabPokeInfo({id, name, image, custo, units: 1})}> Add to cart </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonUnit","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport PokemonUnit from './PokemonUnit'\r\n\r\nfunction PokemonList (props) {    \r\n    \r\n    const { dbPrices } = props \r\n\r\n    const [ nextUrl, setNextUrl ] = useState('')\r\n    const [ prevUrl, setPrevUrl ] = useState('')\r\n    const [ loading, setLoading ] = useState(true)\r\n    const [ pokemonData, setPokemonData ] = useState([])\r\n    const [ apiUrl, setApiUrl ] = useState('https://pokeapi.co/api/v2/pokemon')  \r\n    \r\n    //-----------------------\r\n    // List Logic\r\n    //-----------------------\r\n    \r\n    useEffect( () => {\r\n        \r\n        // first GET request, getting pokemon URLs and pagination\r\n        axios.get(apiUrl)\r\n        .then( response => {            \r\n            const { data:{results, next, previous}} = response\r\n            \r\n            setNextUrl(next)\r\n            setPrevUrl(previous)\r\n            capturarCada(results)\r\n        }) \r\n        \r\n\r\n        // 'Second' GET request, going through the objects and using axios in each\r\n        const capturarCada = async (data) => {\r\n            const _packPokemon = await Promise.all(data.map( async pokemon => {\r\n                let pokemonInfo =  axios.get(pokemon.url).then(res => res.data)\r\n                return pokemonInfo\r\n            }))      \r\n                        \r\n            setPokemonData(_packPokemon)\r\n            setLoading(false)                \r\n        }        \r\n        \r\n    }, [apiUrl]) \r\n    \r\n    function handlePrev(){\r\n        if(prevUrl != null ){\r\n            setLoading(true)\r\n            setApiUrl(prevUrl)\r\n            console.log(prevUrl)\r\n        }\r\n    }\r\n    \r\n    function handleNext(){\r\n        setLoading(true)\r\n        setApiUrl(nextUrl)\r\n        console.log(nextUrl)\r\n    }\r\n    \r\n    // END List Logic\r\n    \r\n    //-----------------------\r\n    // Data transfer to from PokemonList.js to MainContent.js\r\n    //-----------------------\r\n    \r\n    const { dataForCart } = props\r\n    function escalaPokemon(pokemonData) {\r\n        dataForCart(pokemonData)\r\n    }\r\n    //-----------------------\r\n\r\n    return (\r\n        <>  \r\n\r\n            <div className=\"pagination\">\r\n                <button onClick={handlePrev}>Prev</button>\r\n                <button onClick={handleNext}>Next</button>  \r\n            </div>\r\n\r\n            <div className=\"deck\">\r\n                { \r\n                    loading \r\n                        ? <h1>Carregando...</h1> \r\n                        : pokemonData.map( pokemon => {\r\n                            let custo = dbPrices[pokemon.id].price\r\n                            return <PokemonUnit key={pokemon.id} pokeProps={pokemon} custo={custo} grabPokeInfo={escalaPokemon}/> \r\n                        }) \r\n                }\r\n            </div>\r\n\r\n            <div className=\"pagination\">\r\n                <button onClick={handlePrev}>Prev</button>\r\n                <button onClick={handleNext}>Next</button>  \r\n            </div>\r\n                  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonList","import React from 'react'\r\n\r\n\r\nfunction CartItem(props) {\r\n    const { \r\n        pokeCart: {\r\n            image,\r\n            custo,\r\n            units\r\n        }\r\n    } = props\r\n\r\n    return (\r\n        <div className='cartItem'>\r\n            <img src={image} alt='' />\r\n            <p>R${custo * units},00</p>\r\n            <p>x {units}</p>\r\n            <button>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import React from 'react'\r\nimport CartItem from './CartItem'\r\n\r\nfunction Cart(props) {\r\n    const { cartItems } = props\r\n    const Allpokemon = cartItems.map( item => <CartItem key={item.id} pokeCart={item} /> )\r\n    return (\r\n        <>\r\n                <h1>Carrinho</h1>\r\n            {\r\n                cartItems.length > 0\r\n                    ? Allpokemon\r\n                    : <h2>carrinho vazio</h2>    \r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, { useState } from 'react'\r\n\r\nimport PokemonList from './PokemonList'\r\nimport Cart from './Cart'\r\n\r\nfunction MainContent(props) {\r\n    // pulling prices from App.js  \r\n    const { prices } = props\r\n\r\n    // assingning the cart content to be sent down to Cart.js \r\n    const [ cart, setCart ] = useState([])  \r\n\r\n    //function the handles the information that travelled from \r\n    // PokemonUnit > PokemonList > MAINCONTENT > Cart >CartItem\r\n    function handleAddFunction(itemData) {\r\n\r\n        // holding the pokemon data in case it's already in the cart\r\n        const pokemonInCart = cart.filter( item => item.id === itemData.id)\r\n\r\n        // IF THE POKEMON IS ALREADY IN THE CART\r\n        if (pokemonInCart.length > 0) {\r\n            const cartSemEste = cart.filter( test => test.id !== pokemonInCart[0].id)\r\n            const updatedPokemon = { ...pokemonInCart[0], units: pokemonInCart[0].units + itemData.units }\r\n\r\n            setCart([ ...cartSemEste, updatedPokemon ])\r\n\r\n        }else{ // IF NOT IN THE CART\r\n\r\n            setCart([ ...cart, itemData ])\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='middle'>\r\n            <div className='list'>\r\n                <h1>Choose your pokemon:</h1>\r\n                <PokemonList dataForCart={handleAddFunction} dbPrices={prices}/>              \r\n            </div>\r\n            <div className='cart'>\r\n                <Cart cartItems={cart}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport MainContent from './components/MainContent'\n\nfunction App() {\n  // Price database for the shop\n  const [ prices, setPrices ] = useState([])\n\n  // creation of the price array\n  useEffect(() => {\n    let temp = []\n    for (let i=0; i<964; i++){\n      temp.push({ id:i, price: Math.floor(Math.random()*100+1)})\n    }\n    setPrices(temp)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContent prices={prices}/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(  <App />,  document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}